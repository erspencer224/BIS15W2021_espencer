dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(janitor)
options(scipen=999)
ui <- dashboardPage(
dashboardHeader(title = "Admissions by Ethnicity For UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
gabon %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(size=4)+
+ theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit <- readr::read_csv("data/UC_admit.csv") %>%
clean_names()
ui <- dashboardPage(
dashboardHeader(title = "Admissions by Ethnicity For UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(size=4)+
+ theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Admissions by Ethnicity For UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(size=4)+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Admissions by Ethnicity For UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Relative Abundance %", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Select Fill Variable")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Admissions by Ethnicity For UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Select Fill Variable")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Select Fill Variable")
+ theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Select Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="red"
dashboardHeader(title = "UC Campus Data"),
ui <- dashboardPage(skin="red",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="gold2",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
ui <- dashboardPage(skin="purple",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="pink",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
ui <- dashboardPage(skin="purple",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: [University of California Information Center](https://www.universityofcalifornia.edu/infocenter)")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="purple",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("academic_yr", "campus", "category"), selected = "academic_yr"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Admissions by Ethnicity For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Ethnicity", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="yellow",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("campus", "category", "ethnicity"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Enrollment Per Year For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "year", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Year", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="yellow",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("campus", "category", "ethnicity"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Enrollment Per Year For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "academic_yr", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Year", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="yellow",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("campus", "category", "ethnicity"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Enrollment Per Year For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity!="all") %>%
ggplot(aes_string(x = "academic_yr", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Year", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="yellow",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("campus", "category", "ethnicity"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Enrollment Per Year For UC Campuses", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "academic_yr", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Year", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="yellow",
dashboardHeader(title = "UC Campus Data"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Fill Variable", choices = c("campus", "category", "ethnicity"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center @https://www.universityofcalifornia.edu/infocenter")
),
box(title = "Enrollment Per Year For UC Campuses", width = 6,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "academic_yr", y = "filtered_count_fr", fill = input$y)) +
geom_col(position = "dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) + labs(x="Acadmic Year", y="Number of Admissions", fill = "Fill Variable") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
